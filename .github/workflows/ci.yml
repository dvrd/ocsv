name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-14, ubuntu-latest]
        include:
          - os: macos-14
            lib_name: libocsv.dylib
            platform: macOS
          - os: ubuntu-latest
            lib_name: libocsv.so
            platform: Linux

    runs-on: ${{ matrix.os }}
    name: Build & Test (${{ matrix.platform }})
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download LLVM (MacOS ARM)
        if: matrix.os == 'macos-14'
        run: |
          brew update
          brew install llvm@20
          echo "$(brew --prefix llvm@20)/bin" >> $GITHUB_PATH

      - name: Download LLVM (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 20
          echo "/usr/lib/llvm-20/bin" >> $GITHUB_PATH

      - name: Clone and Build Odin
        run: |
          cd /tmp
          git clone --depth=1 https://github.com/odin-lang/Odin.git
          cd Odin
          ./build_odin.sh release
          echo "/tmp/Odin" >> $GITHUB_PATH

      - name: Verify Odin installation
        run: |
          odin version
          odin report

      - name: Build library
        run: odin build src -build-mode:shared -out:${{ matrix.lib_name }} -o:speed

      - name: Verify library exists
        run: |
          if [ -f "${{ matrix.lib_name }}" ]; then
            echo "✓ Library built successfully: ${{ matrix.lib_name }}"
            ls -lh ${{ matrix.lib_name }}
          else
            echo "✗ Library not found!"
            exit 1
          fi

      - name: Run tests
        run: odin test tests -all-packages

      - name: Run tests with memory tracking
        run: odin test tests -all-packages -debug

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ocsv-${{ matrix.platform }}-${{ github.sha }}
          path: ${{ matrix.lib_name }}
          retention-days: 7

  build-windows:
    name: Build & Test (Windows)
    runs-on: windows-2022
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Clone and Build Odin
        shell: cmd
        run: |
          cd %RUNNER_TEMP%
          git clone --depth=1 https://github.com/odin-lang/Odin.git
          cd Odin
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          build.bat 1
          if not exist "odin.exe" (
            echo ERROR: odin.exe was not built!
            dir
            exit /b 1
          )
          echo SUCCESS: odin.exe built at %RUNNER_TEMP%\Odin\odin.exe
          %RUNNER_TEMP%\Odin\odin.exe version

      - name: Build library
        shell: cmd
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          %RUNNER_TEMP%\Odin\odin.exe build src -build-mode:shared -out:ocsv.dll -o:speed

      - name: Verify library exists
        shell: powershell
        run: |
          if (Test-Path "ocsv.dll") {
            Write-Host "[OK] Library built successfully: ocsv.dll"
            Get-Item ocsv.dll
          } else {
            Write-Host "[ERROR] Library not found!"
            exit 1
          }

      - name: Run tests
        shell: cmd
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          %RUNNER_TEMP%\Odin\odin.exe test tests -all-packages

      - name: Run tests with memory tracking
        shell: cmd
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          %RUNNER_TEMP%\Odin\odin.exe test tests -all-packages -debug

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ocsv-Windows-${{ github.sha }}
          path: ocsv.dll
          retention-days: 7

  lint:
    name: Lint & Format Check
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download LLVM (Ubuntu)
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 20
          echo "/usr/lib/llvm-20/bin" >> $GITHUB_PATH

      - name: Clone and Build Odin
        run: |
          cd /tmp
          git clone --depth=1 https://github.com/odin-lang/Odin.git
          cd Odin
          ./build_odin.sh release
          echo "/tmp/Odin" >> $GITHUB_PATH

      - name: Check code
        run: odin build src -build-mode:shared -out:libocsv.so -o:minimal

      - name: Check tests
        run: odin build tests -build-mode:obj -o:minimal
